/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.risc.client;

import edu.duke.ece651.risc.shared.ActionEntry;
import edu.duke.ece651.risc.shared.ClientPlayer;

import java.io.*;
import java.net.Socket;
import java.util.Properties;

public class App {


  private final Socket socket;
  private final ClientPlayer player;

  public App(Socket s, BufferedReader userIn, PrintStream userOut) throws IOException {
    this.socket = s;
    player = new ClientPlayer(new BufferedReader(new InputStreamReader(s.getInputStream())),
            new PrintWriter(s.getOutputStream(), true), userIn, userOut);
  }

  public void loginGame() throws IOException {
    player.loginGame();
  }

  public void endGame() throws IOException {
    socket.close();
  }

  public void run() throws IOException {
    // login game: join an existed game / start a new game
    this.loginGame();
    this.initPhase();
    this.endGame();
  }

  private void initPhase() {
//    player.recvMap();
//    List<ActionEntry> placeActions = player.placeArmy();
//    player.sendMessage(placeActions);
  }

  public static void main(String[] args) throws IOException {
    // load a properties file
    InputStream propFileInputStream = App.class.getClassLoader().getResourceAsStream("config.properties");
    Properties prop = new Properties();
    prop.load(propFileInputStream);

    // init socket
    String hostName = prop.getProperty("server.hostname");
    int portNumber = Integer.parseInt(prop.getProperty("server.port"));
    Socket s = new Socket(hostName, portNumber);
    BufferedReader userIn = new BufferedReader(new InputStreamReader(System.in));
    App app = new App(s, userIn, System.out);
    app.run();
  }
}
