/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.risc.client;

import edu.duke.ece651.risc.shared.ClientPlayer;
import edu.duke.ece651.risc.shared.Player;
import edu.duke.ece651.risc.shared.ServerPlayer;

import java.io.*;
import java.net.Socket;
import java.util.Properties;

public class App {

    public static void main(String[] args) throws IOException {
        // load a properties file
        InputStream propFileInputStream = App.class.getClassLoader().getResourceAsStream("config.properties");
        Properties prop = new Properties();
        prop.load(propFileInputStream);

        // init socket
        String hostName = prop.getProperty("server.hostname");
        int portNumber = Integer.parseInt(prop.getProperty("server.port"));
        Socket s = new Socket(hostName, portNumber);
        BufferedReader userIn = new BufferedReader(new InputStreamReader(System.in));

        ClientPlayer player = new ClientPlayer(new BufferedReader(new InputStreamReader(s.getInputStream())),
                new PrintWriter(s.getOutputStream(), true),
                userIn,
                System.out
        );

        String str = player.recvMessage();
        player.display(str);
        if(!str.equals("Hi, there's no existing game in the system, so we will start a game for you.")){
            player.sendMessage(player.readFromUser());//the user send s or j from stdin
            String msg = player.recvMessage();
            while(msg.equals("You should only input s/j")){
                player.display(msg);
                player.sendMessage(player.readFromUser());
                msg = player.recvMessage();
            }
            player.display(msg);


            player.sendMessage(player.readFromUser());//user type in how many player do you want/the available games list
            msg = player.recvMessage();
            while(!msg.equals("Success!")){
                player.display(msg);
                player.sendMessage(player.readFromUser());
                msg = player.recvMessage();
            }
            player.display(msg);
        }
        else{
            player.display(player.recvMessage()); // how many players in one game
            player.sendMessage(player.readFromUser());
        }
        String name = player.recvMessage();
        System.out.println(name);
        player.setName(name);
        s.close();        
    }

}
